/* tslint:disable */
/* eslint-disable */
/**
 * CureDAO Unified Health API
 * A platform for participant-centered research and personal data exploration
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DeviceToken,
    DeviceTokenFromJSON,
    DeviceTokenToJSON,
} from '../models';

export interface PostDeviceTokenRequest {
    body: DeviceToken;
}

/**
 * 
 */
export class NotificationsApi extends runtime.BaseAPI {

    /**
     * Get NotificationPreferences
     * Get NotificationPreferences
     */
    async getNotificationPreferencesRaw(): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v3/notificationPreferences`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Get NotificationPreferences
     * Get NotificationPreferences
     */
    async getNotificationPreferences(): Promise<void> {
        await this.getNotificationPreferencesRaw();
    }

    /**
     * Post user token for Android, iOS, or web push notifications
     * Post DeviceTokens
     */
    async postDeviceTokenRaw(requestParameters: PostDeviceTokenRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling postDeviceToken.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v3/deviceTokens`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DeviceTokenToJSON(requestParameters.body),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Post user token for Android, iOS, or web push notifications
     * Post DeviceTokens
     */
    async postDeviceToken(requestParameters: PostDeviceTokenRequest): Promise<void> {
        await this.postDeviceTokenRaw(requestParameters);
    }

}
